 @page
@model OPM.SFS.Web.Pages.Admin.AccountAdminModel
@{
	Layout = "_AdminLayout";
}
<div class="grid-container-widescreen">
	<div class="grid-row">
		<div class="grid-col">

			<nav class="usa-breadcrumb" aria-label="Breadcrumbs,,">
			  <ol class="usa-breadcrumb__list">
				<li class="usa-breadcrumb__list-item">
				  <a href="/Admin/Home" class="usa-breadcrumb__link">
					<span>Home</span>
				  </a>
				</li>
				<li class="usa-breadcrumb__list-item">
				  <a href="/Admin/AccountList" class="usa-breadcrumb__link">
					<span>Accounts</span>
				  </a>
				</li>
				<li class="usa-breadcrumb__list-item usa-current" aria-current="page">
				  <span>Account Edit</span>
				</li>
			  </ol>
			</nav>

			<h3>Administration: Account Edit </h3>

			<div asp-validation-summary="All">
				<span>One or more errors occcured.</span>
			</div>

			<form method="post" class="usa-form-large">
				
				<input type="hidden" asp-for="Data.AccountType" />
				<input type="hidden" asp-for="Data.ID" />
				<h3>Account Status</h3>
				<div class="control-group validate-input">
					<label for="ddlAccountStatus">*Account Status</label>
					<select asp-for="Data.ProfileStatusID" asp-items="Model.Data.ProfileStatusList">
					</select>
					<span asp-validation-for="Data.ProfileStatusID"></span>
				</div>
				@if(Model.Data.AccountType == "AO")
				{
					<input type="hidden" id="hfAgencyID" asp-for="Data.AgencyID" />
					<div class="control-group validate-input">
						<label for="ddlAgencyType">*Agency Type</label>
						<select id="ddlAgencyType"asp-items="Model.Data.AgencyTypeList" asp-for="Data.AgencyType">		
							<option value="0">-- Please select --</option>
						</select>
						 <span asp-validation-for="Data.AgencyType"></span>		 
					</div>			

					<div class="agency-filter-state" style="display:none">
						<div class="control-group validate-input">
						<label for="ddlLocalStateFilter">*Filter Agency by State</label>
						<select id="ddlLocalStateFilter" asp-items="Model.Data.StateList" asp-for="Data.StateFilter">	
							<option value="">--Select--</option>
						</select>
						<span asp-validation-for="Data.StateFilter"></span>		 
						</div>
					</div>

					<div class="control-group validate-input">
						<label for="ddlAgency">*Agency</label>
						<select id="ddlAgency" class="agencySelect" asp-items="Model.Data.AgencyList" asp-for="Data.Agency">	
							<option value="">--Select--</option>
						</select>
						 <span asp-validation-for="Data.Agency"></span>		 
					</div>

					 @if(Model.Data.SubAgencyList is not null && Model.Data.SubAgencyList.Count() > 0)
						{  
							<div class="control-group validate-input subagencies">
								<label for="ddlSubAgency">*Sub Agency</label>
								<select id="ddlSubAgency" class="agencySelect" asp-items="Model.Data.SubAgencyList" asp-for="Data.SubAgency">	
									<option value="">--Select--</option>
								</select>
								 <span asp-validation-for="Data.SubAgency"></span>		 
							</div>
						}
						else
						{
							<div class="control-group validate-input subagencies" style="display:none">
								<label for="ddlSubAgency">*Sub Agency</label>
								<select id="ddlSubAgency" class="agencySelect" asp-for="Data.SubAgency">	
									<option value="">--Select--</option>
								</select>
								 <span asp-validation-for="Data.SubAgency"></span>		 
							</div>
						}
				}

				@if(Model.Data.AccountType == "PI")
				{					

					<div class="control-group validate-input">
						<label for="ddlAgency">*Institution</label>
						<select id="ddlAgency" class="agencySelect" asp-items="Model.Data.InstitutionList" asp-for="Data.Institution">	
							<option value="">--Select--</option>
						</select>
						 <span asp-validation-for="Data.Institution"></span>		 
					</div>
				}

				<div class="control-group validate-input">
					<label for="txtUsername">*Username</label>
					<input type="text" id="txtUsername" asp-for="Data.Username">
					<span asp-validation-for="Data.Username"></span>
				</div>

				<div class="control-group validate-input">
					<label for="txtEmail">*Email</label>
					<input type="text" id="txtEmail" asp-for="Data.Email">
					<span asp-validation-for="Data.Email"></span>
				</div>

				<div class="control-group validate-input">
					<label for="txtFirstname">*First Name</label>
					<input type="text" id="txtFirstname" asp-for="Data.Firstname">
					<span asp-validation-for="Data.Firstname"></span>
				</div>

				<div class="control-group validate-input">
					<label for="txtLastname">*Last Name</label>
					<input type="text" id="txtLastname" asp-for="Data.Lastname">
					<span asp-validation-for="Data.Lastname"></span>
				</div>

				<div class="control-group validate-input">
					<label for="txtPhone">*Phone</label>
					<input type="text" id="txtPhone" asp-for="Data.Phone">
					<span asp-validation-for="Data.Phone"></span>
				</div>

				<div class="control-group validate-input">
					<label for="txtPhoneExt">Phone Extension</label>
					<input type="text" id="txtPhoneExt" asp-for="Data.PhoneExt">
					<span asp-validation-for="Data.PhoneExt"></span>
				</div>

				<div class="control-group validate-input">
					<label for="txtFax">Fax</label>
					<input type="text" id="txtFax" asp-for="Data.Fax">
					<span asp-validation-for="Data.Fax"></span>
				</div>
				@if (User.FindFirst("AdminRole").Value != "Read Only")
				{
					<input type="submit" value="Save" class="usa-button" />
				}

			</form>

			</div>
		</div>
	</div>

	@section Scripts {
    <script asp-add-nonce>
		$(function () {
			 $("#ddlAgencyType").on("change", function() {
						var typeID = $(this).val();
						var typeName = $("#ddlAgencyType option:selected" ).text();
						if(typeName == "State" || typeName == "Local"){
							$(".agency-filter-state").show();
						}
						else {
							 $(".agency-filter-state").hide();
							$("#ddlAgency").empty();
							$("#ddlAgency").append("<option value=''>--SELECT--</option>");
							$.getJSON(`?handler=AgenciesByType&id=${typeID}`, (data) => {
								$.each(data, function (i, item) {
									$("#ddlAgency").append(`<option data-id="${item.apprFlow}" value="${item.id}">${item.name}</option>`);
								});
							});
						}
					});

					 $("#ddlLocalStateFilter").on("change", function() {			 
					 var stateID = $(this).val();	 
					 var typeID = $("#ddlAgencyType option:selected").val();
					  $("#ddlAgency").empty();
					  $("#ddlAgency").append("<option value=''>--Select--</option>");
					  $.getJSON({
						  url: `?handler=AgenciesByState&stateID=${stateID}&typeID=${typeID}`
						}).done(function (data, status, xhr) {
							 $.each(data, function (i, item) {
								$("#ddlAgency").append(`<option data-id="${item.apprFlow}" value="${item.id}">${item.name}</option>`);
							});
							$('.subagencies').hide();
					
						}).fail(function (xhr, status, error) {
					});
				 });

				  $("#ddlAgency").on("change", function() {						 
						 var parent = $(this).val();						 
						  $.getJSON({
							  url: `?handler=SubAgencies&id=${parent}`
							}).done(function (data, status, xhr) {
								 $.each(data, function (i, item) {
									 $("#ddlSubAgency").append(`<option value="${item.id}">${item.name}</option>`);
								});
								if($.isEmptyObject(data)){
									$("#ddlSubAgency").empty();
									$('.subagencies').hide();
								}
								else {
									$('.subagencies').show();
								}
							}).fail(function (xhr, status, error) {
						});
					 });

					  var totalSubAgencies = $('#ddlSubAgency > option').length;					
					 if(totalSubAgencies > 1){
						 $('.subagencies').show();
					 }

		});
	</script>
	}